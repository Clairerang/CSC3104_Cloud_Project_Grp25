# CSC3104 Cloud Project - Group 25
# Backend Microservices Stack (KRaft mode - no ZooKeeper)
# Run with: docker-compose up --build

services:
  # --------------------------------------
  # APACHE KAFKA BROKER (KRaft mode - no ZooKeeper)
  # --------------------------------------
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      TZ: "Asia/Singapore"
      # KRaft (ZooKeeper-less) configuration
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      CLUSTER_ID: "OmZ3M1wlTKTiCRO5Xpo7QA"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "bash", "-c", "kafka-topics --bootstrap-server kafka:9092 --list || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5

  # --------------------------------------
  # MONGODB DATABASE
  # --------------------------------------
  mongo:
    image: mongo:7
    container_name: mongo
    environment:
      TZ: "Asia/Singapore"
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --------------------------------------
  # GAMIFICATION SERVICE (Jerald)
  # --------------------------------------
  gamification:
    build: ./gamification-service
    container_name: gamification
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - TZ=Asia/Singapore
      - MONGO_URL=mongodb://mongo:27017/gamification
      - KAFKA_BROKER=kafka:9092
    ports:
      - "4001:4001"
    restart: unless-stopped

  # --------------------------------------
  # NOTIFICATION SERVICE
  # --------------------------------------
  notification:
    build:
      context: .
      dockerfile: ./notification-service/Dockerfile
    container_name: notification
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - TZ=Asia/Singapore
      - KAFKA_BROKER=kafka:9092
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - FIREBASE_SERVICE_ACCOUNT_JSON=${FIREBASE_SERVICE_ACCOUNT_JSON:-}
      - FIREBASE_SERVICE_ACCOUNT_PATH=${FIREBASE_SERVICE_ACCOUNT_PATH:-/run/secrets/firebase-sa.json}
    ports:
      - "4002:4002"
    restart: unless-stopped

  # --------------------------------------
  # Kafka UI Dashboard (Kafdrop)
  # --------------------------------------
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9100:9000"
    environment:
      - TZ=Asia/Singapore
      - KAFKA_BROKERCONNECT=kafka:9092
      - JVM_OPTS=-Xms32M -Xmx64M
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped

# --------------------------------------
# DATA VOLUMES
# --------------------------------------
volumes:
  mongo-data:
  kafka-data:
